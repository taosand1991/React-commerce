{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TAOSAND\\\\Desktop\\\\React folder\\\\src\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\";\nimport { convertToObject } from \"typescript\"; // You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n// You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total,\n  addProduct,\n  removeProduct\n}) => {\n  const disabledButton = () => {\n    return orderedQuantity === availableCount;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: availableCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: orderedQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: disabledButton,\n        onClick: () => addProduct(id),\n        className: styles.actionButton,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Product;\n\nconst Checkout = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n\n  const addProduct = id => {\n    const newProducts = [...products];\n    const productIndex = [...products].findIndex(product => product.id === id);\n\n    if (Object.hasOwn(newProducts[productIndex], \"orderedQuantity\")) {\n      newProducts[productIndex].orderedQuantity++;\n    } else {\n      Object.defineProperty(newProducts[productIndex], \"orderedQuantity\", {\n        value: 1,\n        writable: true\n      });\n    }\n\n    setProducts(newProducts);\n  };\n\n  const removeProduct = id => {};\n\n  useEffect(() => {\n    setLoading(true);\n    getProducts().then(products => {\n      setProducts(products);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electro World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"# Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => {\n            return /*#__PURE__*/_jsxDEV(Product, {\n              id: product.id,\n              name: product.name,\n              price: product.price,\n              availableCount: product.availableCount,\n              total: product.total,\n              orderedQuantity: product.orderedQuantity,\n              addProduct: addProduct\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"ZYPuzhWYL6yri7p1lE7IZ+jS3R8=\");\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"sources":["C:/Users/TAOSAND/Desktop/React folder/src/Checkout.js"],"names":["React","useState","useEffect","styles","LoadingIcon","getProducts","convertToObject","Product","id","name","availableCount","price","orderedQuantity","total","addProduct","removeProduct","disabledButton","actionButton","Checkout","loading","setLoading","products","setProducts","newProducts","productIndex","findIndex","product","Object","hasOwn","defineProperty","value","writable","then","header","table","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\";\nimport { convertToObject } from \"typescript\";\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n// You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total,\n  addProduct,\n  removeProduct,\n}) => {\n  const disabledButton = () => {\n    return orderedQuantity === availableCount;\n  };\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{availableCount}</td>\n      <td>${price}</td>\n      <td>{orderedQuantity}</td>\n      <td>${total}</td>\n      <td>\n        <button\n          disabled={disabledButton}\n          onClick={() => addProduct(id)}\n          className={styles.actionButton}\n        >\n          +\n        </button>\n        <button className={styles.actionButton}>-</button>\n      </td>\n    </tr>\n  );\n};\n\nconst Checkout = () => {\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n\n  const addProduct = (id) => {\n    const newProducts = [...products];\n    const productIndex = [...products].findIndex(\n      (product) => product.id === id\n    );\n    if (Object.hasOwn(newProducts[productIndex], \"orderedQuantity\")) {\n      newProducts[productIndex].orderedQuantity++;\n    } else {\n      Object.defineProperty(newProducts[productIndex], \"orderedQuantity\", {\n        value: 1,\n        writable: true,\n      });\n    }\n\n    setProducts(newProducts);\n  };\n\n  const removeProduct = (id) => {};\n\n  useEffect(() => {\n    setLoading(true);\n    getProducts().then((products) => {\n      setProducts(products);\n      setLoading(false);\n    });\n  }, []);\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n      <main>\n        {loading && <LoadingIcon />}\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th># Available</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => {\n              return (\n                <Product\n                  key={product.id}\n                  id={product.id}\n                  name={product.name}\n                  price={product.price}\n                  availableCount={product.availableCount}\n                  total={product.total}\n                  orderedQuantity={product.orderedQuantity}\n                  addProduct={addProduct}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n        <h2>Order summary</h2>\n        <p>Discount: $ </p>\n        <p>Total: $ </p>\n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}
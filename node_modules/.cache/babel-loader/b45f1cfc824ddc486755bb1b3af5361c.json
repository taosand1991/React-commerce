{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TAOSAND\\\\Desktop\\\\React folder\\\\src\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\"; // You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n// You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total,\n  addProduct,\n  removeProduct\n}) => {\n  const disabledButton = () => {\n    return orderedQuantity === availableCount;\n  };\n\n  const disabledRemoveBtn = () => {\n    return orderedQuantity === 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: availableCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: orderedQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: disabledButton(),\n        onClick: () => addProduct(id),\n        className: styles.actionButton,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeProduct(id),\n        disabled: disabledRemoveBtn(),\n        className: styles.actionButton,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Product;\n\nconst Checkout = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [total, setTotal] = useState(\"0.00\");\n  const [discount, setDiscount] = useState();\n  useEffect(() => {\n    setLoading(true);\n    getProducts().then(products => {\n      const newProducts = products.map(product => {\n        return Object.defineProperties(product, {\n          orderedQuantity: {\n            value: 0,\n            writable: true\n          },\n          total: {\n            value: \"0.00\",\n            writable: true\n          }\n        });\n      });\n      setProducts(newProducts);\n      setLoading(false);\n    });\n  }, []);\n\n  const addProduct = id => {\n    const newProducts = [...products];\n    const productIndex = [...products].findIndex(product => product.id === id);\n    let product = newProducts[productIndex];\n    product.orderedQuantity++;\n    product.total = (product.orderedQuantity * product.price).toFixed(2);\n    setProducts(newProducts);\n    calculateTotal();\n  };\n\n  const calculateTotal = () => {\n    let total = 0;\n    const newProducts = [...products];\n\n    if (newProducts.length === 0) {\n      return \"0.00\";\n    }\n\n    newProducts.map(product => {\n      total += Number(product.total);\n    });\n\n    if (total >= 1000) {\n      const discount = total * 100 / 10;\n      console.log(discount);\n      setDiscount(discount);\n    }\n\n    total.toLocaleString(\"en-GB\", {\n      currency: \"USD\",\n      minimumFractionDigits: 2\n    });\n    setTotal(total);\n  };\n\n  const removeProduct = id => {\n    const newProducts = [...products];\n    const productIndex = [...products].findIndex(product => product.id === id);\n    let product = newProducts[productIndex];\n    product.orderedQuantity--;\n    product.total = (product.orderedQuantity * product.price).toFixed(2);\n    setProducts(newProducts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electro World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"# Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => {\n            return /*#__PURE__*/_jsxDEV(Product, {\n              id: product.id,\n              name: product.name,\n              price: product.price,\n              availableCount: product.availableCount,\n              total: product.total,\n              orderedQuantity: product.orderedQuantity,\n              addProduct: addProduct,\n              removeProduct: removeProduct\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), discount && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $\", total, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"6nqnRL0h6dv8sDF0ATR1vUjr6Qc=\");\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"sources":["C:/Users/TAOSAND/Desktop/React folder/src/Checkout.js"],"names":["React","useState","useEffect","useCallback","styles","LoadingIcon","getProducts","Product","id","name","availableCount","price","orderedQuantity","total","addProduct","removeProduct","disabledButton","disabledRemoveBtn","actionButton","Checkout","loading","setLoading","products","setProducts","setTotal","discount","setDiscount","then","newProducts","map","product","Object","defineProperties","value","writable","productIndex","findIndex","toFixed","calculateTotal","length","Number","console","log","toLocaleString","currency","minimumFractionDigits","header","table"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\";\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n// You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total,\n  addProduct,\n  removeProduct,\n}) => {\n  const disabledButton = () => {\n    return orderedQuantity === availableCount;\n  };\n\n  const disabledRemoveBtn = () => {\n    return orderedQuantity === 0;\n  };\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{availableCount}</td>\n      <td>${price}</td>\n      <td>{orderedQuantity}</td>\n      <td>${total}</td>\n      <td>\n        <button\n          disabled={disabledButton()}\n          onClick={() => addProduct(id)}\n          className={styles.actionButton}\n        >\n          +\n        </button>\n        <button\n          onClick={() => removeProduct(id)}\n          disabled={disabledRemoveBtn()}\n          className={styles.actionButton}\n        >\n          -\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst Checkout = () => {\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [total, setTotal] = useState(\"0.00\");\n  const [discount, setDiscount] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n    getProducts().then((products) => {\n      const newProducts = products.map((product) => {\n        return Object.defineProperties(product, {\n          orderedQuantity: {\n            value: 0,\n            writable: true,\n          },\n          total: {\n            value: \"0.00\",\n            writable: true,\n          },\n        });\n      });\n      setProducts(newProducts);\n      setLoading(false);\n    });\n  }, []);\n\n  const addProduct = (id) => {\n    const newProducts = [...products];\n    const productIndex = [...products].findIndex(\n      (product) => product.id === id\n    );\n    let product = newProducts[productIndex];\n    product.orderedQuantity++;\n    product.total = (product.orderedQuantity * product.price).toFixed(2);\n    setProducts(newProducts);\n    calculateTotal();\n  };\n\n  const calculateTotal = () => {\n    let total = 0;\n    const newProducts = [...products];\n    if (newProducts.length === 0) {\n      return \"0.00\";\n    }\n    newProducts.map((product) => {\n      total += Number(product.total);\n    });\n    if (total >= 1000) {\n      const discount = (total * 100) / 10;\n      console.log(discount);\n      setDiscount(discount);\n    }\n    total.toLocaleString(\"en-GB\", {\n      currency: \"USD\",\n      minimumFractionDigits: 2,\n    });\n    setTotal(total);\n  };\n\n  const removeProduct = (id) => {\n    const newProducts = [...products];\n    const productIndex = [...products].findIndex(\n      (product) => product.id === id\n    );\n    let product = newProducts[productIndex];\n\n    product.orderedQuantity--;\n    product.total = (product.orderedQuantity * product.price).toFixed(2);\n\n    setProducts(newProducts);\n  };\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n      <main>\n        {loading && <LoadingIcon />}\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th># Available</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => {\n              return (\n                <Product\n                  key={product.id}\n                  id={product.id}\n                  name={product.name}\n                  price={product.price}\n                  availableCount={product.availableCount}\n                  total={product.total}\n                  orderedQuantity={product.orderedQuantity}\n                  addProduct={addProduct}\n                  removeProduct={removeProduct}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n        <h2>Order summary</h2>\n        {discount && <p>Discount: $ </p>}\n        <p>Total: ${total} </p>\n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}